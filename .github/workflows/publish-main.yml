name: Build and Publish (main)

on:
  push:
    branches:
      - main

jobs:
  build:
    name: Build, Pack, and Publish
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]
    steps:
      - uses: actions/checkout@v4
      - name: Cache NuGet packages
        uses: actions/cache@v4
        with:
          path: |
            ~/.nuget/packages
          key: ${{ runner.os }}-${{ hashFiles('**/global.json', '**/*.csproj', '**/Directory.Packages.props') }}
      - name: Restore
        run: dotnet restore solution.sln
      - name: Build
        run: dotnet build solution.sln --configuration Release --no-restore
      - name: Publish Binary
        run: dotnet publish src/nperf/nperf.csproj --configuration Release --output artifacts/app --runtime ${{ runner.os == 'Windows' && 'win-x64' || 'linux-x64' }} --self-contained false --framework net7.0
      - name: Pack NuGet
        run: dotnet pack src/nperf/nperf.csproj --configuration Release --output artifacts/nuget --no-build --no-restore
      - name: Upload App Artifact
        uses: actions/upload-artifact@v4
        with:
          name: app
          path: artifacts/app
      - name: Upload NuGet Artifact
        uses: actions/upload-artifact@v4
        with:
          name: nuget
          path: artifacts/nuget
      - name: Publish to NuGet.org
        if: matrix.os == 'ubuntu-latest'
        run: dotnet nuget push "artifacts/nuget/*.nupkg" --api-key ${{ secrets.NUGET_API_KEY }} --source https://api.nuget.org/v3/index.json
      - name: Publish to GitHub Packages
        if: matrix.os == 'ubuntu-latest'
        run: dotnet nuget push "artifacts/nuget/*.nupkg" --api-key ${{ secrets.GITHUB_TOKEN }} --source https://nuget.pkg.github.com/psimsa/index.json
